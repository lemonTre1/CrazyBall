using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CharacterMovement : MonoBehaviour {

    [Header("Movement Attribute")]
    public float speed = 5;
    public float rotAngle = 0;
    public float turnSmoothTime = 0.2f;
    public Vector3 forward;
    float turnnSmoothVelocity;
    public float speedrate = 1;
    [Header("Reference")]
    CharacterController controller;
    Rigidbody rig;
    public float inputHorizontal;
    public float inputVertical;
   
    [Header("Body parts reference")]

    public GameObject upperBody;
    public GameObject lowerBody;
    public GameObject m_inpul_left;
    public GameObject m_inpul_Right;

    [Header("Platform")]
    public bool PC = true;

	void Start () {
        controller = GetComponent<CharacterController>();
        rig = GetComponent<Rigidbody>();
    }
	
	void Update () {
        float fHori = Input.GetAxis("Horizontal");
        float fVerti = Input.GetAxis("Vertical");
        rig.AddForce(new Vector3(fHori, 0, fVerti) * speedrate);


        inputHorizontal = Input.GetAxisRaw("Vertical");

        MobileInputController mic = m_inpul_left.GetComponent<MobileInputController>();
        rig.AddForce(new Vector3(mic.Coordinate().x,0, mic.Coordinate().y)*speedrate);
        
        Vector3 from = new Vector3(0f,0f,1f);
        Vector3 to = new Vector3(m_inpul_Right.GetComponent<MobileInputController>().Horizontal,0f, m_inpul_Right.GetComponent<MobileInputController>().Vertical);
    
        if (m_inpul_Right.GetComponent<MobileInputController>().Horizontal != 0 && m_inpul_Right.GetComponent<MobileInputController>().Vertical != 0)
        {
            float angle = Vector3.SignedAngle(from, to, Vector3.up);
            rotAngle = angle;

            transform.eulerAngles = Vector3.up * Mathf.SmoothDampAngle(transform.eulerAngles.y, angle, ref turnnSmoothVelocity, turnSmoothTime);
        }
    }

}
